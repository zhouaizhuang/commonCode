{"version":3,"sources":["../src/helpers.js"],"names":["ORIGIN_DATE","Date","UTC","isBoolean","maybeBoolean","isNumber","maybeNumber","isString","maybeString","isObject","maybeObject","isCellDescriptor","maybeCell","buildExcelDate","value","is1904","epoch","parse","buildSheetFromMatrix","data","options","workSheet","range","s","c","r","e","Array","isArray","Error","R","length","C","cell","v","cellRef","XLSX","utils","encode_cell","t","z","SSF","_table","f","encode_range"],"mappings":";;;;;;;AAAA;;AAEA,IAAMA,WAAW,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,EAAf,EAAmB,EAAnB,CAAT,CAApB;;AAEO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,YAAD;AAAA,SAAkB,OAAOA,YAAP,KAAwB,SAA1C;AAAA,CAAlB;;;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,WAAD;AAAA,SAAiB,OAAOA,WAAP,KAAuB,QAAxC;AAAA,CAAjB;;;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,WAAD;AAAA,SAAiB,OAAOA,WAAP,KAAuB,QAAxC;AAAA,CAAjB;;;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,WAAD;AAAA,SAAiBA,WAAW,KAAK,IAAhB,IAAwB,OAAOA,WAAP,KAAuB,QAAhE;AAAA,CAAjB;;;;AACA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,SAAD;AAAA,SAAeH,QAAQ,CAACG,SAAD,CAAR,IAAuB,OAAOA,SAA7C;AAAA,CAAzB;;;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAC/C,MAAMC,KAAK,GAAGf,IAAI,CAACgB,KAAL,CAAWH,KAAK,IAAIC,MAAM,GAAG,IAAH,GAAU,CAApB,CAAhB,CAAd;AACA,SAAO,CAACC,KAAK,GAAGhB,WAAT,IAAwB,KAA/B;AACD,CAHM;;;;AAKA,IAAMkB,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,IAAD,EAAOC,OAAP,EAAwB;AAAA,MAAjBA,OAAiB;AAAjBA,IAAAA,OAAiB,GAAP,EAAO;AAAA;;AAC1D,MAAMC,SAAS,GAAG,EAAlB;AACA,MAAMC,KAAK,GAAG;AAACC,IAAAA,CAAC,EAAE;AAACC,MAAAA,CAAC,EAAE,GAAJ;AAASC,MAAAA,CAAC,EAAE;AAAZ,KAAJ;AAAsBC,IAAAA,CAAC,EAAE;AAACF,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE;AAAV;AAAzB,GAAd;AAEA,MAAI,CAACE,KAAK,CAACC,OAAN,CAAcT,IAAd,CAAL,EAA0B,MAAM,IAAIU,KAAJ,CAAU,yBAAV,CAAN;;AAE1B,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,KAAKX,IAAI,CAACY,MAA3B,EAAmCD,CAAC,IAAI,CAAxC,EAA2C;AACzC,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,KAAKb,IAAI,CAACW,CAAD,CAAJ,CAAQC,MAA9B,EAAsCC,CAAC,IAAI,CAA3C,EAA8C;AAC5C,UAAI,CAACL,KAAK,CAACC,OAAN,CAAcT,IAAI,CAACW,CAAD,CAAlB,CAAL,EAA6B,MAAM,IAAID,KAAJ,CAAW,GAAEC,CAAE,0BAAf,CAAN;AAE7B,UAAIR,KAAK,CAACC,CAAN,CAAQE,CAAR,GAAYK,CAAhB,EAAmBR,KAAK,CAACC,CAAN,CAAQE,CAAR,GAAYK,CAAZ;AACnB,UAAIR,KAAK,CAACC,CAAN,CAAQC,CAAR,GAAYQ,CAAhB,EAAmBV,KAAK,CAACC,CAAN,CAAQC,CAAR,GAAYQ,CAAZ;AACnB,UAAIV,KAAK,CAACI,CAAN,CAAQD,CAAR,GAAYK,CAAhB,EAAmBR,KAAK,CAACI,CAAN,CAAQD,CAAR,GAAYK,CAAZ;AACnB,UAAIR,KAAK,CAACI,CAAN,CAAQF,CAAR,GAAYQ,CAAhB,EAAmBV,KAAK,CAACI,CAAN,CAAQF,CAAR,GAAYQ,CAAZ;;AACnB,UAAIb,IAAI,CAACW,CAAD,CAAJ,CAAQE,CAAR,MAAe,IAAnB,EAAyB;AACvB,iBADuB,CACb;AACX;;AACD,UAAMC,IAAI,GAAGtB,gBAAgB,CAACQ,IAAI,CAACW,CAAD,CAAJ,CAAQE,CAAR,CAAD,CAAhB,GAA+Bb,IAAI,CAACW,CAAD,CAAJ,CAAQE,CAAR,CAA/B,GAA4C;AAACE,QAAAA,CAAC,EAAEf,IAAI,CAACW,CAAD,CAAJ,CAAQE,CAAR;AAAJ,OAAzD;;AACA,UAAMG,OAAO,GAAGC,cAAKC,KAAL,CAAWC,WAAX,CAAuB;AAACd,QAAAA,CAAC,EAAEQ,CAAJ;AAAOP,QAAAA,CAAC,EAAEK;AAAV,OAAvB,CAAhB;;AACA,UAAIzB,QAAQ,CAAC4B,IAAI,CAACC,CAAN,CAAZ,EAAsB;AACpBD,QAAAA,IAAI,CAACM,CAAL,GAAS,GAAT;AACD,OAFD,MAEO,IAAIpC,SAAS,CAAC8B,IAAI,CAACC,CAAN,CAAb,EAAuB;AAC5BD,QAAAA,IAAI,CAACM,CAAL,GAAS,GAAT;AACD,OAFM,MAEA,IAAIN,IAAI,CAACC,CAAL,YAAkBjC,IAAtB,EAA4B;AACjCgC,QAAAA,IAAI,CAACM,CAAL,GAAS,GAAT;AACAN,QAAAA,IAAI,CAACC,CAAL,GAASrB,cAAc,CAACoB,IAAI,CAACC,CAAN,CAAvB;AACAD,QAAAA,IAAI,CAACO,CAAL,GAASP,IAAI,CAACO,CAAL,IAAUJ,cAAKK,GAAL,CAASC,MAAT,CAAgB,EAAhB,CAAnB,CAHiC,CAGO;;AAExC;;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACQ;AACD,OAjBM,MAiBA,IAAIjC,QAAQ,CAACwB,IAAI,CAACC,CAAN,CAAZ,EAAsB;AAC3BD,QAAAA,IAAI,CAACM,CAAL,GAASN,IAAI,CAACC,CAAL,CAAOK,CAAhB;AACAN,QAAAA,IAAI,CAACU,CAAL,GAASV,IAAI,CAACC,CAAL,CAAOS,CAAhB;AACAV,QAAAA,IAAI,CAACO,CAAL,GAASP,IAAI,CAACC,CAAL,CAAOM,CAAhB;AACD,OAJM,MAIA;AACLP,QAAAA,IAAI,CAACM,CAAL,GAAS,GAAT;AACD;;AACD,UAAIlC,QAAQ,CAAC4B,IAAI,CAACO,CAAN,CAAZ,EAAsBP,IAAI,CAACO,CAAL,GAASJ,cAAKK,GAAL,CAASC,MAAT,CAAgBT,IAAI,CAACO,CAArB,CAAT,CAxCsB,CAwCY;;AACxDnB,MAAAA,SAAS,CAACc,OAAD,CAAT,GAAqBF,IAArB;AACD;AACF;;AACD,MAAIX,KAAK,CAACC,CAAN,CAAQC,CAAR,GAAY,GAAhB,EAAqB;AACnBH,IAAAA,SAAS,CAAC,MAAD,CAAT,GAAoBe,cAAKC,KAAL,CAAWO,YAAX,CAAwBtB,KAAxB,CAApB;AACD;;AACD,MAAIF,OAAO,CAAC,OAAD,CAAX,EAAsB;AACpBC,IAAAA,SAAS,CAAC,OAAD,CAAT,GAAqBD,OAAO,CAAC,OAAD,CAA5B;AACD;;AACD,MAAIA,OAAO,CAAC,SAAD,CAAX,EAAwB;AACtBC,IAAAA,SAAS,CAAC,SAAD,CAAT,GAAuBD,OAAO,CAAC,SAAD,CAA9B;AACD;;AACD,SAAOC,SAAP;AACD,CA7DM","sourcesContent":["import XLSX from 'xlsx';\n\nconst ORIGIN_DATE = new Date(Date.UTC(1899, 11, 30));\n\nexport const isBoolean = (maybeBoolean) => typeof maybeBoolean === 'boolean';\nexport const isNumber = (maybeNumber) => typeof maybeNumber === 'number';\nexport const isString = (maybeString) => typeof maybeString === 'string';\nexport const isObject = (maybeObject) => maybeObject !== null && typeof maybeObject === 'object';\nexport const isCellDescriptor = (maybeCell) => isObject(maybeCell) && 'v' in maybeCell;\n\nexport const buildExcelDate = (value, is1904) => {\n  const epoch = Date.parse(value + (is1904 ? 1462 : 0));\n  return (epoch - ORIGIN_DATE) / 864e5;\n};\n\nexport const buildSheetFromMatrix = (data, options = {}) => {\n  const workSheet = {};\n  const range = {s: {c: 1e7, r: 1e7}, e: {c: 0, r: 0}};\n\n  if (!Array.isArray(data)) throw new Error('sheet data is not array');\n\n  for (let R = 0; R !== data.length; R += 1) {\n    for (let C = 0; C !== data[R].length; C += 1) {\n      if (!Array.isArray(data[R])) throw new Error(`${R}th row data is not array`);\n\n      if (range.s.r > R) range.s.r = R;\n      if (range.s.c > C) range.s.c = C;\n      if (range.e.r < R) range.e.r = R;\n      if (range.e.c < C) range.e.c = C;\n      if (data[R][C] === null) {\n        continue; // eslint-disable-line\n      }\n      const cell = isCellDescriptor(data[R][C]) ? data[R][C] : {v: data[R][C]};\n      const cellRef = XLSX.utils.encode_cell({c: C, r: R});\n      if (isNumber(cell.v)) {\n        cell.t = 'n';\n      } else if (isBoolean(cell.v)) {\n        cell.t = 'b';\n      } else if (cell.v instanceof Date) {\n        cell.t = 'n';\n        cell.v = buildExcelDate(cell.v);\n        cell.z = cell.z || XLSX.SSF._table[14]; // eslint-disable-line no-underscore-dangle\n\n        /* eslint-disable spaced-comment, no-trailing-spaces */\n        /***\n         * Allows for an non-abstracted representation of the data\n         *\n         * example: {t:'n', z:10, f:'=AVERAGE(A:A)'}\n         *\n         * Documentation:\n         * - Cell Object: https://sheetjs.gitbooks.io/docs/#cell-object\n         * - Data Types: https://sheetjs.gitbooks.io/docs/#data-types\n         * - Format: https://sheetjs.gitbooks.io/docs/#number-formats\n         **/\n        /* eslint-disable spaced-comment, no-trailing-spaces */\n      } else if (isObject(cell.v)) {\n        cell.t = cell.v.t;\n        cell.f = cell.v.f;\n        cell.z = cell.v.z;\n      } else {\n        cell.t = 's';\n      }\n      if (isNumber(cell.z)) cell.z = XLSX.SSF._table[cell.z]; // eslint-disable-line no-underscore-dangle\n      workSheet[cellRef] = cell;\n    }\n  }\n  if (range.s.c < 1e7) {\n    workSheet['!ref'] = XLSX.utils.encode_range(range);\n  }\n  if (options['!cols']) {\n    workSheet['!cols'] = options['!cols'];\n  }\n  if (options['!merges']) {\n    workSheet['!merges'] = options['!merges'];\n  }\n  return workSheet;\n};\n"],"file":"helpers.js"}