{"version":3,"sources":["../src/index.js"],"names":["parse","mixed","options","workSheet","XLSX","Object","keys","Sheets","map","name","sheet","data","utils","sheet_to_json","header","raw","range","parseMetadata","decode_range","build","worksheets","defaults","bookType","bookSST","type","workBook","Workbook","forEach","worksheet","sheetName","sheetOptions","sheetData","SheetNames","push","excelData","write","Buffer"],"mappings":"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","sourcesContent":["import XLSX from 'xlsx';\nimport bufferFrom from 'buffer-from';\nimport {buildSheetFromMatrix, isString} from './helpers';\nimport Workbook from './workbook';\n\nexport const parse = (mixed, options = {}) => {\n  const workSheet = XLSX[isString(mixed) ? 'readFile' : 'read'](mixed, options);\n  return Object.keys(workSheet.Sheets).map((name) => {\n    const sheet = workSheet.Sheets[name];\n    return {name, data: XLSX.utils.sheet_to_json(sheet, {header: 1, raw: options.raw !== false\n      , range: options.range ? options.range[name] : null})};\n  });\n};\n\nexport const parseMetadata = (mixed, options = {}) => {\n  const workSheet = XLSX[isString(mixed) ? 'readFile' : 'read'](mixed, options);\n  return Object.keys(workSheet.Sheets).map((name) => {\n    const sheet = workSheet.Sheets[name];\n    return {name, data: sheet[\"!ref\"] ? XLSX.utils.decode_range(sheet[\"!ref\"]) : null };\n  });\n};\n\nexport const build = (worksheets, options = {}) => {\n  const defaults = {\n    bookType: 'xlsx',\n    bookSST: false,\n    type: 'binary'\n  };\n  const workBook = new Workbook();\n  worksheets.forEach((worksheet) => {\n    const sheetName = worksheet.name || 'Sheet';\n    const sheetOptions = worksheet.options || {};\n    const sheetData = buildSheetFromMatrix(worksheet.data || [], {...options, ...sheetOptions});\n    workBook.SheetNames.push(sheetName);\n    workBook.Sheets[sheetName] = sheetData;\n  });\n  const excelData = XLSX.write(workBook, {...defaults, ...options});\n  return excelData instanceof Buffer ? excelData : bufferFrom(excelData, 'binary');\n};\n\nexport default {parse, parseMetadata, build};\n"],"file":"index.js"}